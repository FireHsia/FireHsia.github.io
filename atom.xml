<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FireHsia&#39;s Blog</title>
  <subtitle>Love, Diligence and Perseverance</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.FireHsia.github.io/"/>
  <updated>2017-07-19T06:47:03.000Z</updated>
  <id>www.FireHsia.github.io/</id>
  
  <author>
    <name>FireHsia</name>
    <email>firehsia1204@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS 代码初始化StoryBoard和XIB控件</title>
    <link href="www.FireHsia.github.io/2017/07/19/word2017071902/"/>
    <id>www.FireHsia.github.io/2017/07/19/word2017071902/</id>
    <published>2017-07-19T06:40:43.000Z</published>
    <updated>2017-07-19T06:47:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1890332-b4a6f8a92130c60c.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="joker.jpeg"></p>
<p>###关于纯代码控件和SB控件孰优孰劣, 这里不予探讨<br>可以参考一下<a href="http://blog.devtang.com/2015/03/22/ios-dev-controversy-2/" target="_blank" rel="external">唐巧大神的文章</a></p>
<hr>
<p>###代码初始化和XIB初始化所执行方法</p>
<blockquote>
<ul>
<li>一般我们自定义view的话会重写view的<figure class="highlight plain"><figcaption><span>(instancetype)initWithFrame:(CGRect)frame```方法</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">在该方法中添加自定义控件</div><div class="line">&gt; - 而如果用XIB自定义控件的话, 又想在代码中控制, 需要重写</div><div class="line">```- (instancetype)initWithCoder:(NSCoder *)aDecoder```方法</div><div class="line"></div><div class="line">***</div><div class="line">###用代码初始化StoryBoard和XIB控件的三种方法</div><div class="line">-  第一种 通过StoryBoard的名字拿到SB 再通过SB调用```instantiateInitialViewController</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">UIStoryboard *stroyB = [UIStoryboard storyboardWithName:@&quot;StoryBoard文件名&quot; bundle:nil];</div><div class="line">NavViewController *naVC = [stroyB instantiateInitialViewController];</div><div class="line"></div><div class="line"> //  由storyboard根据ViewController的storyBoard ID来获取我们要切换的视图控制器</div><div class="line">ViewController *VC = [stroyB instantiateViewControllerWithIdentifier:@&quot;StoryBoard中VC的Identifier&quot;];</div><div class="line">NSLog(@&quot;%@&quot;, [naVC class]);</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1890332-079557000da9ced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<ul>
<li>第二种 创建XIB文件 通过<figure class="highlight plain"><figcaption><span>mainBundle] loadNib ```加载NIB文件</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">ViewController *viewVC = [[[NSBundle mainBundle] loadNibNamed:@&quot;XIB文件名&quot; owner:self options:nil] firstObject];</div><div class="line">NSLog(@&quot;%@&quot;, [viewVC class]);</div></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>注: XIB文件名要与创建自定义的V或VC名字对应</p>
<ul>
<li>第三种 通过 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">ViewController *viewVC = [[ViewController alloc] initWithNibName:@&quot;StoryBoard文件名&quot; bundle:nil];</div><div class="line">NSLog(@&quot;%@&quot;, [viewVC class]);</div></pre></td></tr></table></figure></li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1890332-b4a6f8a92130c60c.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
    
    </summary>
    
      <category term="iOS笔记" scheme="www.FireHsia.github.io/categories/iOS%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS笔记" scheme="www.FireHsia.github.io/tags/iOS%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>游戏与生活</title>
    <link href="www.FireHsia.github.io/2017/07/19/word2017071901/"/>
    <id>www.FireHsia.github.io/2017/07/19/word2017071901/</id>
    <published>2017-07-19T02:54:06.000Z</published>
    <updated>2017-07-19T03:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1890332-edf2fb575681be48?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>早上突然想起梦三国里某英雄(周泰)的嘲讽技能 (PS :梦三国是高中陪伴我将近三年的游戏 精神食粮 O(∩_∩)O), 此英雄的特点就是嘲讽, 无脑, 极端.  倘若你被他嘲讽到, 你对他进行攻击, 他的护甲会增加且将伤害以百分比的方式反弹给对手, 当对手血量低于某值时, 大招可予以斩杀.  想想就觉得变态.</li>
</ul>
<hr>
<ul>
<li>人生如戏(游戏)  全靠演技, 现实生活中往往都会存在些许的消极(嘲讽, 批判, 否定..),就拿嘲讽为例, 被嘲讽后疯狂反击 , 怕只会让对手愈加强大, 而反观你却伤痕累累,身心俱疲, 亦或两败俱伤.</li>
</ul>
<hr>
<ul>
<li>游戏里面对嘲讽 除了装备(BKB 红龙抵挡)  那么就是你自身的提高, 比如 1. 比他更肉且外加反甲装备(反弹伤害) , 这样他就不会对你下手, 因为他知道对你的嘲讽等于无用功;不用肉, 高伤害且吸血, 同样他也不敢对你下手, 原因很简单 他若嘲讽你  会被你无情杀死 而你的高伤害和吸血对于你来说基本不会有任何损伤.</li>
</ul>
<hr>
<ul>
<li>生活里面对他人的嘲讽, 你可以很肉 肉到无视他的嘲讽 化悲痛为力量 继续修行 更加肉 直到他再嘲讽你 会被啪啪打脸的时候 便不会对你下手 嘲讽将离你远去, 你也可以高攻击外加吸血, 这点要求比较高, 就是你的知识储备或者能力要远高于对手, 那么面对对手的嘲讽 疯狂反击  对手同样会啪啪啪的疯狂打脸.</li>
</ul>
<hr>
<p>往往生活中的否定与嘲讽 要爱惜  要思考 这些都是自我修行的催化剂</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1890332-edf2fb575681be48?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=
    
    </summary>
    
      <category term="馊鸡汤" scheme="www.FireHsia.github.io/categories/%E9%A6%8A%E9%B8%A1%E6%B1%A4/"/>
    
    
      <category term="馊鸡汤" scheme="www.FireHsia.github.io/tags/%E9%A6%8A%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="www.FireHsia.github.io/2017/06/23/hello-world/"/>
    <id>www.FireHsia.github.io/2017/06/23/hello-world/</id>
    <published>2017-06-23T06:39:57.000Z</published>
    <updated>2017-07-19T03:08:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>  Welcome to FireHsia’s Blog </em></strong></p>
<ul>
<li>博客用于记录总结分享学习过程, 转载和参考文献会在文中做标记, 如有侵权<a href="firehsia1204@gmail.com">联系我</a>立刻删除</li>
<li>最近脑子不好, 好记性不如烂笔头, 记录对我来说很关键, 温故知新</li>
<li>不止于专业技能, 还有平时生活点滴见解, 方便记录</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;  Welcome to FireHsia’s Blog &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;博客用于记录总结分享学习过程, 转载和参考文献会在文中做标记, 如有侵权&lt;a href=&quot;firehsia1204@gmail.com&quot;
    
    </summary>
    
      <category term="日常" scheme="www.FireHsia.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="日常" scheme="www.FireHsia.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>iOS CATransition动画实现SDWebImage图片下载完成渐变动画</title>
    <link href="www.FireHsia.github.io/2017/06/23/secondBlog/"/>
    <id>www.FireHsia.github.io/2017/06/23/secondBlog/</id>
    <published>2017-06-23T06:39:57.000Z</published>
    <updated>2017-07-19T03:08:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载: <a href="http://www.jianshu.com/p/f0b3db7edc93" target="_blank" rel="external">原文地址</a></p>
<p>CATransition转场动画, 有效缓冲SDWebImage下载图片效果</p>
<blockquote>
<p> 代码实现</p>
<p> 在图片下载完成的block中给image.layer添加转场动画</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (void)sd_setImageWithURL:(NSURL *)url placeholderImage:(UIImage *)placeholder &#123;</div><div class="line">     __weak typeof(self) weakSelf = self;</div><div class="line">    [self sd_setImageWithURL:url placeholderImage:placeholder completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) &#123;</div><div class="line"></div><div class="line">        if (image &amp;&amp; cacheType == SDImageCacheTypeNone) &#123;</div><div class="line">            CATransition *transition = [CATransition animation];</div><div class="line">            transition.type = kCATransitionFade;</div><div class="line">            transition.duration = 0.3;</div><div class="line">            transition.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</div><div class="line">            [weakSelf.layer addAnimation:transition forKey:nil];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载: &lt;a href=&quot;http://www.jianshu.com/p/f0b3db7edc93&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CATransition转场动画, 有效缓冲SDWebImage下载图片效果
    
    </summary>
    
      <category term="iOS动画" scheme="www.FireHsia.github.io/categories/iOS%E5%8A%A8%E7%94%BB/"/>
    
    
      <category term="iOS动画" scheme="www.FireHsia.github.io/tags/iOS%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
</feed>
